#definição de variaveis

numero wait = 400 #tempo de espera
numero us = 1 #sensor ultrassônico
numero lsleft = 2 #porta sensor de luz esquerda
numero lsright = 1 #porta sensor de luz direita
numero lsmid = 3 #porta sensor de luz meio
numero fwd = 100  #velocidade reta
numero turn = 150 #velocidade curva
numero giroSPD = 350 #velocidade de giro
numero cont = 0
numero tempoIni = 0
numero velocidade = 0
numero intervaloTempo = 0

#definição de funções


tarefa subirGarra{
    velocidadeatuador(120)
    levantar(100)
    enquanto(anguloatuador() < 290 ou anguloatuador() > 295)farei {
        escrever(1, virartexto(anguloatuador()))
        escrever(2, virartexto(angulogiroatuador()))
        levantar(5)
        girarbaixo(20)
    }
}

tarefa descerGarra{
    velocidadeatuador(120)
    baixar(100)
    enquanto(anguloatuador() > 290 ou anguloatuador() < 7)farei {
        escrever(1, virartexto(anguloatuador()))
        escrever(2, virartexto(angulogiroatuador()))
        baixar(5)
        girarcima(10)
    }
    se (angulogiroatuador() > 8 e angulogiroatuador() < 100) entao {
        enquanto(angulogiroatuador() > 8)farei{
            escrever(1, virartexto(anguloatuador()))
            escrever(2, virartexto(angulogiroatuador()))
            girarbaixo(10)
        }
    } senao {
        enquanto(angulogiroatuador() < 8 ou angulogiroatuador() > 300)farei{
            escrever(1, virartexto(anguloatuador()))
            escrever(2, virartexto(angulogiroatuador()))
            girarcima(10)
        }
    }
}

tarefa entregar{
    parar()
    baixar(500)
    girarbaixo(500)
}

tarefa green{ #vê a intersecção verde
    se (cor(lsleft) == "VERDE") entao {    #curva 90º pra esquerda
        frente (fwd)
        esperar(500)
        direita(negativo(giroSPD))
        esperar (wait)
        enquanto(cor(lsleft) != "PRETO") farei{
            direita(negativo(giroSPD))
        }
    }

    se (cor(lsright) == "VERDE") entao {    #curva 90º pra direita
        frente (fwd)
        esperar (500)
        esquerda(negativo(giroSPD))
        esperar (wait)
        enquanto(cor(lsright) != "PRETO") farei{
            esquerda(negativo(giroSPD))
        }
    }
}

tarefa curvaFechada{
    se ((cor(lsright) == "PRETO") e (cor(lsleft) == "PRETO")) entao {     #virar para a direita em 90º
        frente(fwd)
        esperar(700)
        rotacionar(giroSPD, 60)
        esperar(wait)
        se(cor(lsright)=="PRETO") entao{
            parar()
        }
        senao{
            enquanto(cor(lsright)=="BRANCO") farei{
            esquerda(giroSPD)
            }
        }
    }
}

numero direcaoInicial = 0
numero direcaoFinal = 0
tarefa curvaFixadaDireita{
    # Valores truncados em multiplos de 90
    direcaoInicial = arredondar(direcao()/90)*90
    direcaoFinal = resto(90* ( arredondar(direcao()/90) +1 ), 360)
    
    # Alem de truncado em multiplos de 90, os valores da direcaoFinal
    # vao de 0 a 360 e depois voltam a zero. O resto da divisao do valor por 360
    # já faz isso de "voltar" a zero depois desse valor
    
    # escrever(1, virartexto(direcaoInicial))
    # escrever(2, virartexto(direcaoFinal))

    se(direcaoFinal == 0)entao{
        # Adapta o resultado do resto pro caso em que 
        # a curva vai crescendo até o valor 0 = 360
        direcaoFinal = 359
    }

    se(direcaoInicial == 360)entao{
        direita(1000)
        esperar(500)
    }
    
    enquanto( direcao() < direcaoFinal e direcao() < 360)farei{
        direita(1000)
    }
    parar()

    escrever(1, virartexto(direcao()))
}

tarefa resgate{
    parar()
    descerGarra()
    velocidade = 200

    tempoIni = tempo()
    intervaloTempo = 4000
    enquanto(verdadeiro)farei{
        se(temvitima())entao{
            velocidade = 100
        } senao {
            velocidade = 200
        }

        se(cor(3) == "PRETO" e (tempo() - tempoIni > intervaloTempo)) entao{
            acenderled("VERMELHO")
            se(temvitima()) entao {
                entregar()
                subirGarra()
                apagarled()
                # intervaloTempo = intervaloTempo * 0.7
            }
            curvaFixadaDireita()
            descerGarra()
            tempoIni = tempo()
        }

        se((tempo() - tempoIni > intervaloTempo) e !temvitima()) entao {
            acenderled("VERMELHO")
            curvaFixadaDireita()
            descerGarra()
            tempoIni = tempo()
        }senao {
            acenderled("AZUL")
        }

        frente(velocidade)
        se(ultra(1) < 50)entao{
            parar()
            se(anguloatuador() < 30 e angulogiroatuador() < 30)entao{
                # Garra abaixada
                subirGarra()
            }
            
            curvaFixadaDireita()

            se(!temvitima() e ( anguloatuador() > 280 e anguloatuador() < 320 ) )entao{
                # Garra levantada, não tem vitima
                tras(30)
                descerGarra()
            }
            tempoIni = tempo()
            escrever(3, "3")
        }senao se ( ultra(2) < 100 e ultra(2) > 30 e !temvitima() ) entao {
            esperar(100)
            parar()
            subirGarra()
            curvaFixadaDireita()
            escrever(3, "4")
            tras(30)
            descerGarra()
            tempoIni = tempo()
            enquanto(!temvitima() ou ultra(1) > 60)farei{
                frente(100)
            }
            enquanto (ultra(1) > 50) farei {
                frente(100)
            }
            subirGarra()
            parar()
        }
    }
}

tarefa rampa{
    se (inclinacao()>335 e ultra(2) <45) entao{
        cont = cont + 1
        se ((cor(lsright) == "BRANCO") e (cor(lsleft) == "BRANCO")) entao {
            frente(300)
        }
  
        senao se ((cor(lsright) == "BRANCO") e (cor(lsleft) == "PRETO")) entao {     
            direita(negativo(turn))
            esperar(wait)
        }
  
        senao se ((cor(lsright) == "PRETO") e (cor(lsleft) == "BRANCO")) entao {    
            esquerda(negativo(turn))
            esperar(wait)
        }
    }
    senao se (cont!=0) entao{
        frente(300)
        acenderled("VERDE")
        esperar(470)
        resgate()
    }
}

tarefa seguir{
    green()
    curvaFechada()
    rampa()

    se ((cor(lsright) == "BRANCO") e (cor(lsleft) == "BRANCO")) entao {   #Se os dois sensores lerem branco andar pra frente
        frente(fwd)
    }

    senao se ((cor(lsright) == "BRANCO") e (cor(lsleft) == "PRETO")) entao {     #virar levemente para a esquerda
        esquerda(turn)
        esperar(150)
    }

    senao se ((cor(lsright) == "PRETO") e (cor(lsleft) == "BRANCO")) entao {     #virar levemente para a direita
        direita(turn)
        esperar(150)
    }
}


tarefa desviar{
    rotacionar(400, negativo(60))
    frente(400)
    esperar(500)
    rotacionar(400, 60)
    farei{
        enquanto(cor(1) == "BRANCO" e ultra(2) >=20)farei{
            frente(100)
        }
        se(cor(1) != "BRANCO" ou cor(2) != "BRANCO")entao{
            rotacionar(400, negativo(45))
            frente(400)
            esperar(400)
            rotacionar(400, negativo(45))
            parar()
        } senao {
            frente(400)
            esperar(500)
            rotacionar(400, 90)
        }
    }enquanto(cor(1) == "BRANCO")

}

tarefa pegar{

}


#==================MAIN================
inicio

cont = 0

subirGarra()
enquanto (3>1) farei{
    se(ultra(us) >= 25)entao{
        seguir()
    }
    senao{
        desviar()
    }
}

fim