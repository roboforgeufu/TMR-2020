#definição de variaveis

numero wait = 400 #tempo de espera
numero us = 1 #sensor ultrassônico
numero lsleft = 2 #porta sensor de luz esquerda
numero lsright = 1 #porta sensor de luz direita
numero lsmid = 3 #porta sensor de luz meio
numero fwd = 100  #velocidade reta
numero turn = 150 #velocidade curva
numero cont = 0
numero tempoIni = 0

#definição de funções


tarefa subirGarra{
    velocidadeatuador(120)
    levantar(100)
    enquanto(anguloatuador() < 290 ou anguloatuador() > 295)farei {
        escrever(1, virartexto(anguloatuador()))
        escrever(2, virartexto(angulogiroatuador()))
        levantar(5)
        girarbaixo(20)
    }
}

tarefa descerGarra{
    velocidadeatuador(120)
    baixar(100)
    enquanto(anguloatuador() > 290 ou anguloatuador() < 7)farei {
        escrever(1, virartexto(anguloatuador()))
        escrever(2, virartexto(angulogiroatuador()))
        baixar(5)
        girarcima(10)
    }
    se (angulogiroatuador() > 8 e angulogiroatuador() < 100) entao {
        enquanto(angulogiroatuador() > 8)farei{
            escrever(1, virartexto(anguloatuador()))
            escrever(2, virartexto(angulogiroatuador()))
            girarbaixo(10)
        }
    } senao {
        enquanto(angulogiroatuador() < 8 ou angulogiroatuador() > 300)farei{
            escrever(1, virartexto(anguloatuador()))
            escrever(2, virartexto(angulogiroatuador()))
            girarcima(10)
        }
    }
}


tarefa green{ #vê a intersecção verde
    se (cor(lsleft) == "VERDE") entao {    #curva 90º pra esquerda
        frente (fwd)
        esperar(500)
        direita(negativo(turn))
        esperar (wait)
        enquanto(cor(lsleft) != "PRETO") farei{
            direita(negativo(turn))
        }
    }

    se (cor(lsright) == "VERDE") entao {    #curva 90º pra direita
        frente (fwd)
        esperar (wait)
        esquerda(negativo(turn))
        esperar (wait)
        enquanto(cor(lsright) != "PRETO") farei{
            esquerda(negativo(turn))
        }
    }
}

tarefa curvaFechada{
    se ((cor(lsright) == "PRETO") e (cor(lsleft) == "PRETO")) entao {     #virar para a direita em 90º
        frente(fwd)
        esperar(50)
        esperar(wait)
        rotacionar(turn, 90)
        esperar(wait)
        se(cor(lsright)=="PRETO") entao{
            parar()
        }
        senao{
            enquanto(cor(lsright)=="BRANCO") farei{
            esquerda(turn)
            }
        }
    }
}

tarefa resgate{
    parar()
    descerGarra()
    girarcima(110)
    tempoIni = tempo()
    enquanto(verdadeiro)farei{  
        frente(200)
        se(tempo() - tempoIni > 5000)entao{
            tras(50)
            esperar(500)
            parar()

            se(temvitima())entao{
                # TODO: deixar a bolinha
            }
            se(anguloatuador() > 320 ou anguloatuador() < 20)entao{
                subirGarra()
            }
            rotacionar(1000, 90)
            tempoIni = tempo()
        }
        se(temvitima() e (anguloatuador() > 320 ou anguloatuador() < 20))entao{
            enquanto(ultra(1) > 55)farei{
                frente(120)
            }
            parar()
            subirGarra()
        }
        se(ultra(1) < 65 ou (ultra(2) < 40 e !temvitima()))entao{
            esperar(130)
            parar()
            se(anguloatuador() > 320 ou anguloatuador() < 20)entao{
                subirGarra()
            }
            rotacionar(1000, 90)
            tempoIni = tempo()
            se(!temvitima())entao{
                tras(150)
                descerGarra()
            }
        }
    }
}

tarefa rampa{
    se (inclinacao()>335 e ultra(2) <45) entao{
        cont = cont + 1
        se ((cor(lsright) == "BRANCO") e (cor(lsleft) == "BRANCO")) entao {
            frente(300)
        }
  
        senao se ((cor(lsright) == "BRANCO") e (cor(lsleft) == "PRETO")) entao {     
            direita(negativo(turn))
            esperar(wait)
        }
  
        senao se ((cor(lsright) == "PRETO") e (cor(lsleft) == "BRANCO")) entao {    
            esquerda(negativo(turn))
            esperar(wait)
        }
    }
    senao se (cont!=0) entao{
        frente(300)
        acenderled("VERDE")
        esperar(600)
        resgate()
    }
}

tarefa seguir{
    green()
    curvaFechada()
    rampa()

    se ((cor(lsright) == "BRANCO") e (cor(lsleft) == "BRANCO")) entao {   #Se os dois sensores lerem branco andar pra frente
        frente(fwd)
    }

    senao se ((cor(lsright) == "BRANCO") e (cor(lsleft) == "PRETO")) entao {     #virar levemente para a esquerda
        direita(negativo(turn))
        esperar(wait)
    }

    senao se ((cor(lsright) == "PRETO") e (cor(lsleft) == "BRANCO")) entao {     #virar levemente para a direita
        esquerda(negativo(turn))
        esperar(wait)
    }
}


tarefa desviar{
    rotacionar(400, negativo(60))
    frente(400)
    esperar(500)
    rotacionar(400, 60)
    farei{
        enquanto(cor(1) == "BRANCO" e ultra(2) >=20)farei{
            frente(100)
        }
        se(cor(1) != "BRANCO" ou cor(2) != "BRANCO")entao{
            rotacionar(400, negativo(45))
            frente(400)
            esperar(400)
            rotacionar(400, negativo(45))
            parar()
        } senao {
            frente(400)
            esperar(500)
            rotacionar(400, 90)
        }
    }enquanto(cor(1) == "BRANCO")

}

tarefa pegar{

}


#==================MAIN================
inicio

cont = 0

subirGarra()
enquanto (3>1) farei{
    se(ultra(us) >= 25)entao{
        seguir()
    }
    senao{
        desviar()
    }
}

fim